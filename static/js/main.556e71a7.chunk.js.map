{"version":3,"sources":["Button.js","Rating.js","Table.js","Dialog.js","Navbar.js","App.js","serviceWorker.js","index.js"],"names":["ReadButton","props","isRead","onClick","selectedColor","content","react_default","a","createElement","Button_default","variant","color","DeleteButton","IconButton_default","Delete_default","AddNewBookButton","mini","Add_default","Rating","stars","rating","i","push","index_es","key","className","icon","faStar","title","concat","BookListTable","bookList","changeReadStatus","onDissmiss","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","map","book","index","objectID","component","scope","href","toLowerCase","split","join","description","author","src_Rating","Button_ReadButton","read","Button_DeleteButton","AddNewBookDialog","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","objectSpread","state","target","id","value","setState","handleRating","inputRating","parseInt","handleToggle","open","handleSubmit","onCreate","_this$state","_this$state$book","react","Button_AddNewBookButton","Dialog_default","onClose","aria-labelledby","DialogTitle_default","DialogContent_default","TextField_default","autoFocus","onChange","margin","label","type","fullWidth","DialogActions_default","Component","withStyles","root","flexGrow","grow","menuButton","marginLeft","marginRight","classes","appName","onBookCreate","AppBar_default","position","Toolbar_default","Typography_default","Dialog_AddNewBookDialog","window","__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__","App","bind","assertThisInitialized","handleSubmitBook","elemID","slice","changingBook","find","updatedBookList","filter","result","Math","max","apply","toConsumableArray","Infinity","newBook","highestBookID","Navbar","src_Table","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.556e71a7.chunk.js","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst ReadButton = props => {\n  const { isRead, onClick } = props;\n  let selectedColor = '';\n  let content = '';\n\n  if (isRead) {\n    selectedColor = 'primary';\n    content = 'Yes';\n  } else {\n    selectedColor = 'secondary';\n    content = 'No';\n  }\n  return (\n    <Button onClick={onClick} variant=\"contained\" color={selectedColor}>\n      {content}\n    </Button>\n  );\n};\n\nconst DeleteButton = props => {\n  const { onClick } = props;\n  return (\n    <IconButton onClick={onClick}>\n      <DeleteIcon />\n    </IconButton>\n  );\n};\n\nconst AddNewBookButton = props => {\n  const { onClick } = props;\n  return (\n    <Button mini onClick={onClick} variant=\"fab\" color=\"primary\">\n      <AddIcon />\n    </Button>\n  );\n};\nexport { ReadButton, DeleteButton, AddNewBookButton };\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\n\nconst Rating = props => {\n  let stars = [];\n  const { rating } = props;\n  for (let i = 0; i < 5; i++) {\n    if (i < rating) {\n      stars.push(<FontAwesomeIcon key={i} className=\"checked\" icon={faStar} />);\n    } else {\n      stars.push(<FontAwesomeIcon key={i} icon={faStar} />);\n    }\n  }\n  return <span title={`This book has ${rating} stars`}>{stars}</span>;\n};\n\nexport default Rating;\n","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { ReadButton, DeleteButton } from './Button';\nimport Rating from './Rating';\n\nconst BookListTable = props => {\n  const { bookList, changeReadStatus, onDissmiss } = props;\n  const googleSearchUrl = 'https://www.google.com/search?q=';\n  return (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell>#</TableCell>\n          <TableCell>Title</TableCell>\n          <TableCell>Description</TableCell>\n          <TableCell>Author</TableCell>\n          <TableCell>Rating</TableCell>\n          <TableCell>Read?</TableCell>\n          <TableCell>Delete</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {bookList.map((book, index) => (\n          <TableRow key={book.objectID}>\n            <TableCell component=\"th\" scope=\"row\">\n              {index + 1}\n            </TableCell>\n            <TableCell>\n              <a\n                href={`${googleSearchUrl}${book.title\n                  .toLowerCase()\n                  .split(' ')\n                  .join('+')}`}\n              >\n                {book.title}\n              </a>\n            </TableCell>\n            <TableCell>{book.description}</TableCell>\n            <TableCell>{book.author}</TableCell>\n            <TableCell>\n              <Rating rating={book.rating} />\n            </TableCell>\n            <TableCell>\n              <ReadButton\n                onClick={() => changeReadStatus(book.objectID)}\n                isRead={book.read}\n              />\n            </TableCell>\n            <TableCell>\n              <DeleteButton onClick={() => onDissmiss(book.objectID)} />\n            </TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n};\n\nexport default BookListTable;\n","import React, { Component, Fragment } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { AddNewBookButton } from './Button';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default class AddNewBookDialog extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      book: {\n        title: '',\n        description: '',\n        author: '',\n        rating: ''\n      }\n    };\n  }\n\n  handleChange = e => {\n    const book = { ...this.state.book };\n    book[e.target.id] = e.target.value;\n    this.setState({ book });\n  };\n\n  handleRating = e => {\n    const book = { ...this.state.book };\n    const inputRating = parseInt(e.target.value);\n    if (inputRating > 5) {\n      book.rating = 5;\n    } else if (inputRating < 1) {\n      book.rating = 1;\n    } else if (!inputRating) {\n      book.rating = '';\n    } else {\n      book.rating = inputRating;\n    }\n    this.setState({ book });\n  };\n\n  handleToggle = () => {\n    this.setState(state => {\n      return { open: !state.open };\n    });\n  };\n\n  handleSubmit = () => {\n    const { book } = this.state;\n    this.props.onCreate(book);\n    this.setState({\n      open: false,\n      book: {\n        title: '',\n        description: '',\n        author: '',\n        rating: ''\n      }\n    });\n  };\n\n  render() {\n    const {\n      open,\n      book: { title, description, author, rating }\n    } = this.state;\n    return (\n      <Fragment>\n        <AddNewBookButton onClick={this.handleToggle} />\n        <Dialog\n          open={open}\n          onClose={this.handleToggle}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Add New Book</DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              onChange={this.handleChange}\n              value={title}\n              margin=\"dense\"\n              id=\"title\"\n              label=\"Book Title\"\n              type=\"text\"\n              fullWidth\n            />\n            <TextField\n              value={description}\n              onChange={this.handleChange}\n              margin=\"dense\"\n              id=\"description\"\n              label=\"Book Description\"\n              type=\"text\"\n              fullWidth\n            />\n            <TextField\n              value={author}\n              onChange={this.handleChange}\n              margin=\"dense\"\n              id=\"author\"\n              label=\"Book Author\"\n              type=\"text\"\n              fullWidth\n            />\n            <TextField\n              value={rating}\n              onChange={this.handleRating}\n              margin=\"dense\"\n              id=\"rating\"\n              label=\"Book Rating\"\n              type=\"number\"\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleToggle} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={this.handleSubmit} color=\"primary\">\n              Submit\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport AddNewBookDialog from './Dialog';\n\nconst styles = {\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  }\n};\n\nconst NavBar = props => {\n  const { classes, appName, onBookCreate } = props;\n  return (\n    <AppBar position=\"static\" color=\"default\">\n      <Toolbar>\n        <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n          {appName}\n        </Typography>\n        <AddNewBookDialog onCreate={onBookCreate} />\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default withStyles(styles)(NavBar);\n","import React, { Component } from 'react';\nimport './App.css';\nimport BookListTable from './Table';\nimport Navbar from './Navbar';\n\nwindow.__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__ = true;\n\nconst bookList = [\n  {\n    title: 'The Lord of the Rings',\n    description: 'A very good book',\n    author: 'JRR Tolkien',\n    rating: 5,\n    read: false,\n    objectID: 0\n  },\n  {\n    title: 'Harry Potter',\n    description: 'A magical Book',\n    author: 'J K Rowling',\n    rating: 5,\n    read: false,\n    objectID: 1\n  },\n  {\n    title: 'Inkheart',\n    description: 'Very good book sir',\n    author: 'Someone',\n    rating: 3,\n    read: false,\n    objectID: 2\n  }\n];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bookList\n    };\n\n    this.changeReadStatus = this.changeReadStatus.bind(this);\n    this.onDissmiss = this.onDissmiss.bind(this);\n    this.handleSubmitBook = this.handleSubmitBook.bind(this);\n  }\n\n  changeReadStatus(elemID) {\n    // Create a copy of booklist array\n    const bookList = this.state.bookList.slice();\n    // Find the book that we will change its read value\n    const changingBook = bookList.find(book => book.objectID === elemID);\n    changingBook.read = !changingBook.read;\n    this.setState({ bookList });\n  }\n\n  onDissmiss(elemID) {\n    const { bookList } = this.state;\n    const updatedBookList = bookList.filter(book => book.objectID !== elemID);\n    this.setState({ bookList: updatedBookList });\n  }\n\n  // Find the highest ID to apply in creating new books\n  highestBookID() {\n    const { bookList } = this.state;\n    const result = Math.max(...bookList.map(book => book.objectID));\n    if (result === -Infinity) {\n      return 0;\n    }\n    return result;\n  }\n\n  handleSubmitBook(book) {\n    const bookList = this.state.bookList.slice();\n    const newBook = {\n      title: book.title,\n      description: book.description,\n      author: book.author,\n      rating: book.rating,\n      read: false,\n      // To avoid duplicate ID, it will find the highest book ID then plus one\n      objectID: this.highestBookID() + 1\n    };\n    bookList.push(newBook);\n    this.setState({ bookList });\n  }\n\n  render() {\n    const { bookList } = this.state;\n    return (\n      <div className=\"library container\">\n        <Navbar appName=\"Library\" onBookCreate={this.handleSubmitBook} />\n        <div className=\"book-table\">\n          <BookListTable\n            bookList={bookList}\n            changeReadStatus={this.changeReadStatus}\n            onDissmiss={this.onDissmiss}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}